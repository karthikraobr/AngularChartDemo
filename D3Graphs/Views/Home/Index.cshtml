<div ng-app="AngularCharts">
    <div ng-controller="MainCtrl">
        <button ng-click="getData()"> Fire!</button>
        <button ng-click="reset()"> Reset!</button>
        <canvas id="pie" class="chart chart-pie" chart-data="data" chart-labels="labels" chart-click="onClick"  chart-options="chartOptions"></canvas>    
        <div ui-grid="gridOptions" ui-grid-grouping class="myGrid"></div>   
        </div>
        
        
    </div>
</div>
<script src="//ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min.js"></script>
<script src="//netdna.bootstrapcdn.com/twitter-bootstrap/2.3.1/js/bootstrap.min.js"></script>
<script src="//ajax.googleapis.com/ajax/libs/angularjs/1.2.8/angular.min.js"></script>
<script src="//cdn.rawgit.com/angular-ui/bower-ui-grid/master/ui-grid.min.js"></script>
<link rel="stylesheet" href="//cdn.rawgit.com/angular-ui/bower-ui-grid/master/ui-grid.min.css"/>
<link rel="stylesheet" href="//netdna.bootstrapcdn.com/bootstrap/3.1.0/css/bootstrap.min.css">
<script src="//cdnjs.cloudflare.com/ajax/libs/Chart.js/1.0.2/Chart.js"></script>
<script src="//cdn.jsdelivr.net/angular.chartjs/latest/angular-chart.min.js"></script>
<link rel="/cdn.jsdelivr.net/angular.chartjs/latest/angular-chart.css"/>
<script src="~/Scripts/ng-google-chart.js"></script>
<script>
    //Init
    var app = angular.module("AngularCharts", ["ui.grid", "ui.grid.grouping", "ui.grid.resizeColumns", "chart.js"]);
    app.controller('MainCtrl', function ($scope, $http) {
        //Method for pie chart selection
        $scope.onClick = function (selection) {
            if(selection)
                $scope.gridOptions.data = $scope.empData.filter(function (emp) { return emp.Department == selection[0].label.replace(/\D/g, '') })
        };
        //Method for resetting grid to default state
        $scope.reset = function () { $scope.gridOptions.data = $scope.empData }

        //The grid options
        $scope.gridOptions = {
            enableGridMenu: true,
            showGridFooter: true,
            enableFiltering: true,
            enableColumnResizing: true,
            columnDefs:
                [
              { name: 'Id' },
              { name: 'Name' },
              { name: 'Department'},
              { name: 'Date Of Birth', field: 'DOB' },
              { name: 'Address' },
              { name: 'Category'  },
              { name: 'Salary' }
                ]
        }
        $scope.chartOptions = {
            //Boolean - Whether we should show a stroke on each segment
            segmentShowStroke: true,

            //String - The colour of each segment stroke
            segmentStrokeColor: "#fff",

            //Number - The width of each segment stroke
            segmentStrokeWidth: 2,

            //Number - Amount of animation steps
            animationSteps: 100,

            //String - Animation easing effect
            animationEasing: "easeOutBounce",

            //Boolean - Whether we animate the rotation of the Doughnut
            animateRotate: true,

            //Boolean - Whether we animate scaling the Doughnut from the centre
            animateScale: false,

            //String - A legend template
            legendTemplate: "<ul class=\"<%=name.toLowerCase()%>-legend\"><% for (var i=0; i<segments.length; i++){%><li><span style=\"background-color:<%=segments[i].fillColor%>\"></span><%if(segments[i].label){%><%=segments[i].label%><%}%></li><%}%></ul>"

        }
        $scope.getData = function () {

            $http.get("/Home/GetEmployees/" + 30000)
                         .success(function (response) {
                             //Global object for resetting grid to default state
                             $scope.empData = response.Employees;
                             //Actual data bound to grid
                             $scope.gridOptions.data = response.Employees;
                             $scope.labels = response.Departments.map(function (dept) { return "Department "+ dept});
                             
                             $scope.data = [];
                             response.Departments.forEach(function (dept) {
                                 $scope.data.push($scope.empData.filter(function (emp) { return emp.Department == dept }).length)
                             });
                            
                         })
                         .error(function (response) {
                             $scope.error = response.data;
                             $scope.status = "Page load failed.";
                         });


        }
    });
</script>